{{- range $agent := .Values.agents }}
apiVersion: {{ include "cyber-ai-agent.deployment.apiVersion" $ }}
kind: Deployment
metadata:
  name: {{ include "cyber-ai-agent.fullname" $ }}-{{ $agent.name }}
  labels:
    {{- include "cyber-ai-agent.labels" $ | nindent 4 }}
    app.kubernetes.io/component: {{ $agent.name }}
spec:
  replicas: {{ $agent.replicaCount | default $.Values.replicaCount | default 1 }}
  selector:
    matchLabels:
      {{- include "cyber-ai-agent.selectorLabels" $ | nindent 6 }}
      app.kubernetes.io/component: {{ $agent.name }}
  template:
    metadata:
      {{- with $.Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "cyber-ai-agent.selectorLabels" $ | nindent 8 }}
        app.kubernetes.io/component: {{ $agent.name }}
        {{- with $.Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with $.Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "cyber-ai-agent.serviceAccountName" $ }}
      securityContext:
        {{- toYaml $.Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ $agent.name }}
          securityContext:
            {{- toYaml $.Values.securityContext | nindent 12 }}
          image: "{{ $agent.image.repository | default $.Values.image.repository }}:{{ $agent.image.tag | default $.Values.image.tag | default $.Chart.AppVersion }}"
          imagePullPolicy: {{ $agent.image.pullPolicy | default $.Values.image.pullPolicy }}
          # Override command if needed to specify agent ID or config file
          # command: ["python", "-m", "api.main", "--agent-id", "{{ $agent.name }}"]
          ports:
            - name: http
              containerPort: 8000 # Default FastAPI port
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            {{- toYaml ($agent.resources | default $.Values.resources) | nindent 12 }}
          env:
            # Add global environment variables
            {{- range $.Values.globalEnv }}
            - name: {{ .name }}
              value: {{ .value | quote }}
            {{- else if .valueFrom }}
            - name: {{ .name }}
              valueFrom:
              {{- toYaml .valueFrom | nindent 16 }}
            {{- end }}
            {{- end }}
            # Add agent-specific environment variables
            {{- range $agent.env }}
            - name: {{ .name }}
              value: {{ .value | quote }}
            {{- else if .valueFrom }}
            - name: {{ .name }}
              valueFrom:
              {{- toYaml .valueFrom | nindent 16 }}
            {{- end }}
            {{- end }}
          volumeMounts:
            - name: config-volume
              mountPath: /home/appuser/app/config # Mount entire config dir
              readOnly: true
      volumes:
        - name: config-volume
          configMap:
            name: {{ include "cyber-ai-agent.fullname" $ }}-config
      {{- with $.Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---
{{- end }} 